networks:
   default:
   internal:

x-tool: &backend
  restart: unless-stopped
  env_file: .env
  environment:
    - REDIS_URI=${REDIS_URI}
    - RABBITMQ_URI=${RABBITMQ_URI}
    - DATABASE_URI=${DATABASE_URI}
    - DEBUG=1
    - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
  image: helfertool-ng:latest
  build:
    context: ..
    dockerfile: Dockerfile
  networks:
    - internal
  volumes:
    - ./config:/config
    - ./run:/helfertool/run
    - ./logs/tool:/log

  depends_on:
    - database
    - redis
    - rabbitmq

services:
   helfertool:
     <<: *backend
     command: start
     networks:
       - internal
     volumes:
       - ./config:/config
       - ./data:/data
       - ./static:/helfertool/static
       - ./logs/tool:/log
       - ./run:/helfertool/run
      
   celery-worker:
     <<: *backend
     command: celery-worker
     environment:
       - CELERY_QUEUES=celery
       - CELERY_CONCURRENCY=4
     ports:
       - "9010:9010"
     healthcheck:
       test: ["CMD-SHELL", "celery-liveness"]
       interval: 30s
       timeout: 30s
       retries: 5
   
   celery-beat:
      <<: *backend
      command: celery-beat

   redis:
     image: redis:7-alpine
     restart: always
     networks:
       - internal
     volumes:
       - redis-static:/data/
     healthcheck:
       test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

   database:
      image: postgres:15-alpine
      environment:
         POSTGRES_USER: ${POSTGRES_USER}
         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
         POSTGRES_DB: ${POSTGRES_DB}
         POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=md5"
         PGDATA: /data/postgres
      networks:
         - internal
      volumes:
         - ./db:/data/postgres
         - ./create-db.sql:/docker-entrypoint-initdb.d/create_database.sql
      restart: unless-stopped
      healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 60s
        timeout: 10s
        retries: 5

   rabbitmq:
      image: rabbitmq:3-management-alpine
      restart: unless-stopped
      environment:
        - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
        - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
        - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
      ports:
        - "5672:5672"
        - "15672:15672"
      networks:
         - internal
      volumes:
         - ./rabbitmq_config.conf:/etc/rabbitmq/rabbitmq.conf
         - ./zmq:/var/lib/rabbitmq/
         - ./logs/rabbit:/var/log/rabbitmq

   proxy:
     image: nginx:latest
     restart: unless-stopped
     ports:
       - "80:80"
     networks:
       - default
       - internal
     depends_on:
       - helfertool
     volumes:
       - ./static:/static:ro
       - ./www:/www:ro
       - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
     labels:
      traefik.enable: false

volumes:
  redis-static:
